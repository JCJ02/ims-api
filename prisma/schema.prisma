// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int       @id @default(autoincrement())
  firstname String
  lastname  String
  email     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  role      String?   @default("Admin")
  account   Account[]
}

model Intern {
  id         Int          @id @default(autoincrement())
  firstname  String
  lastname   String
  email      String
  birthdate  DateTime
  school     String
  mentor     String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?
  role       String
  account    Account[]
  attendance Attendance[]
  tasks      Tasks[]
}

model Mentor {
  id        Int       @id @default(autoincrement())
  firstname String
  lastname  String
  email     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  role      String
}

model Account {
  id        Int       @id @default(autoincrement())
  password  String
  adminId   Int?
  internId  Int?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
  admin     Admin?    @relation(fields: [adminId], references: [id])
  inter     Intern?   @relation(fields: [internId], references: [id])
}

model Role {
  id              Int       @id @default(autoincrement())
  firstname       String
  lastname        String
  email           String
  password        String
  confirmPassword String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
}

model Attendance {
  id                Int                 @id @default(autoincrement())
  internId          Int?
  timeIn            DateTime
  timeOut           DateTime
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  deletedAt         DateTime?
  intern            Intern?             @relation(fields: [internId], references: [id])
  completion_status Completion_Status[]
}

model Completion_Status {
  id              Int         @id @default(autoincrement())
  attendanceId    Int?
  hoursToComplete Int         @default(0)
  hoursRendered   Int         @default(0)
  hoursNeededLeft Int         @default(0)
  daysToComplete  Int         @default(0)
  daysRendered    Int         @default(0)
  daysLeft        Int         @default(0)
  overtime        Int?        @default(0)
  endOfInternship DateTime?
  Attendance      Attendance? @relation(fields: [attendanceId], references: [id])
}

model Tasks {
  id          Int     @id @default(autoincrement())
  internId    Int?
  title       String
  description String
  Intern      Intern? @relation(fields: [internId], references: [id])
}
